name: code review

on:
  pull_request:

jobs:
  code_review:
    runs-on: ubuntu-latest

    steps:
    - name: check out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # fetch all of the git history

    - name: git diff
      run: |
        git fetch origin

        echo "Before commit SHA: ${{ github.event.pull_request.base.sha }}"
        echo "After commit SHA: ${{ github.event.pull_request.head.sha }}"
        echo $(git diff --unified=3 ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})

        git diff --unified=3 ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > diff.txt
        # cat diff.txt

        git_diff=$(cat diff.txt)
        echo "DIFF<<EOF" >> $GITHUB_ENV
        echo "$git_diff" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
        echo "환경변수 확인"
        echo ${{env.DIFF}}

    - name: review to pull request
      uses: actions/github-script@v6
      env: 
        DIFF_CONTENT: ${{env.DIFF}}
      with:
        github-token: ${{ secrets.SATELLITE_TOKEN }}
        script: |
          const content = process.env.DIFF_CONTENT
          console.log("issue number : " + context.issue.number)
          console.log("owner : " + context.repo.owner)
          console.log("repo : " + context.repo.repo)

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: "hello world"
          })

    - name: Get diff of changed files
      id: diff
      run: |
        git fetch origin ${{ github.event.pull_request.base.ref }}
        git diff origin/${{ github.event.pull_request.base.ref }}...${{ github.sha }} > diff.txt

    - name: Extract added lines
      id: extract_lines
      run: |
        # 'git diff'에서 변경된 라인만 필터링하여 'added_lines.txt'에 저장
        grep "^+" diff.txt | grep -v "^+++" | grep -v "^+@@" > added_lines.txt
        cat added_lines.txt  # 추출된 라인 확인

    - name: Create comments from added lines
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.SATELLITE_TOKEN }}
        script: |
          const fs = require('fs');
          const addedLines = fs.readFileSync('added_lines.txt', 'utf8').split('\n');

          console.log("----------> addedLines : " + addedLines)
          console.log("----------> addedLines.length : " + addedLines.length)
          console.log("==================================================")
          const comments = [];
          let currentFile = '';
          let lineNumber = null;

          addedLines.forEach(line => {
            console.log("----------> line : " + line)
            if (line.startsWith('+++') || line.startsWith('---')) {
              currentFile = line.split(' ')[1].trim();
            }
            if (line.startsWith('@@')) {
              const match = line.match(/@@ -\d+,\d+ \+(\d+),/);
              if (match) {
                lineNumber = parseInt(match[1]);
              }
            }
            if (line.startsWith('+') && !line.startsWith('+++')) {
              console.log("----------> currentFile : " + currentFile)
              console.log("----------> lineNumber : " + lineNumber)
              if (currentFile && lineNumber !== null) {
                comments.push({
                  path: currentFile,
                  body: `🚀 이 부분에서 변경되었습니다: \n\n\`\`\`diff\n${line}\n\`\`\``,
                  line: lineNumber,
                  side: 'RIGHT',
                });
              }
              lineNumber++;
            }
          });

          if (comments.length > 0) {
            const { owner, repo, number } = context.issue;
            for (const comment of comments) {
              await github.rest.pulls.createReviewComment({
                owner,
                repo,
                pull_number: number,
                body: comment.body,
                path: comment.path,
                position: comment.line,
              });
            }
          } else {
            console.log('No changes detected for comments');
          }
        
